using BinaryProvider # requires BinaryProvider 0.3.0 or later


# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libscsindir"], :indirect),
    LibraryProduct(prefix, ["libscsdir"], :direct),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaOpt/SCSBuilder/releases/download/v2.1.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-gnu-gcc4.tar.gz", "34b41dfef9c226f8d83f09b360912361718f3a5b4135bd7189db53dadd2e0fc1"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-gnu-gcc7.tar.gz", "85bafb5423ac5a1ea1b6db2bc41fe5014062583a01f511e5d2d8081d36c2443f"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-gnu-gcc8.tar.gz", "2322f68fe4a77eb7756a4ceab4e20921ed30eb5299ae3185b2bd838566e19776"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-musl-gcc4.tar.gz", "7273ef3da721e542f2c3d557185c9da543b2998924660a7076905ad0c5be7ae7"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-musl-gcc7.tar.gz", "53281a5a9749bc9543e4f79012da36362bed8fa9b1afa1604e10ffc5350c8b04"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.aarch64-linux-musl-gcc8.tar.gz", "6aee43fe52a979d1e5439676ac93dcb4ea0067cd7a152828da155b0657529934"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-gnueabihf-gcc4.tar.gz", "2881da1cadaec2196a1b7c1ac3f97472b681d2e2004dad01bc6e3c9dd928a484"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-gnueabihf-gcc7.tar.gz", "b90199b231424f3d0ec833a5f0acd0cac1bbbe6ccfd9a36853a01181d1cec7ff"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-gnueabihf-gcc8.tar.gz", "d7c5878f537c1c79a9f2cd2b88c7bf065b90e29cdba6febf99ac00487ab504e4"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-musleabihf-gcc4.tar.gz", "8db9b8e92f5175849d52939c8afdf363c5fbf0cfc587fafeaac208e72ae790f3"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-musleabihf-gcc7.tar.gz", "80df4145f76b2ac9aa9ab7904ff651045127c9e31f2a297c869c71771015a512"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.arm-linux-musleabihf-gcc8.tar.gz", "8797b0554dd8aa9d7e65851ae0a06a186a40009e2aabb95d482688d37a9acfe0"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-gnu-gcc4.tar.gz", "60333e4c9c10769d4ea218d91cca5ee01446c33a39aaa85c138378e7351c7fd2"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-gnu-gcc7.tar.gz", "c8b3f3f814e9badc0139636be8ef7426ab15614be70989341657ccc02ff6b03f"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-gnu-gcc8.tar.gz", "0f91d62806da2c796db94b191ae8a4f0573c7d607b2a37ed42912ca50bdf4269"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-musl-gcc4.tar.gz", "e855eb0f0f5f7c2d6a1929cacbb198d90aea61dcb19023d085ddd3a10814584d"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-musl-gcc7.tar.gz", "2ceea41ab2b37c7795bca0d9b74f82a77f1bff87f1a380f17ace2ad17fce6296"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-linux-musl-gcc8.tar.gz", "4a9b0122bdfe5030fe5ca2f14d71079b97c4f97ad0bfe9e785dedbba8544367c"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-w64-mingw32-gcc4.tar.gz", "2a2aadbc3c7fc4f649ea46ccae59e59e72b86831473d803605372d9f3c9f1870"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-w64-mingw32-gcc7.tar.gz", "e08ba6c19751f9931897f6f231b0fe028664f7fcd083358b264b7af929ae9b6d"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.i686-w64-mingw32-gcc8.tar.gz", "f99af2a951c4a41e31177fd41f1b43c7322b45521d391f11828d52b93240201c"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.powerpc64le-linux-gnu-gcc4.tar.gz", "87a71c164db6f1f9a1f5a5eaf09f58e5d18aefb7b85142e0b515319675e49114"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.powerpc64le-linux-gnu-gcc7.tar.gz", "f050f9a2593418c95a6820d7cfa98c1cccdd3643314dffd15fe0ace475f49f42"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.powerpc64le-linux-gnu-gcc8.tar.gz", "7e45ced74ef925cb656a40a19830e180b94e68895bef8aec8d6871a5f3dbd29d"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-apple-darwin14-gcc4.tar.gz", "9e80809460a8e0efed54dd844649ee2a16d46cb9f10fb750e7bc860c333e003c"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-apple-darwin14-gcc7.tar.gz", "385b6dc9b74661d8af8c3601b75aced6f8a104c930df3349fe2eda106dc824cb"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-apple-darwin14-gcc8.tar.gz", "63143185ca81830fe93e9deee70d6091eee3649949e9c861b9d0fd9d23cc3279"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-gnu-gcc4.tar.gz", "8de3dd5dbcb06f69fdb0a8c9bb5d92db04c2d8b31adb9dd589eca54b4b6245c8"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-gnu-gcc7.tar.gz", "65690fcb9fa14adac871a8af0d4bdb0bead7d8c8e7d82c02b25c72267d04700e"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-gnu-gcc8.tar.gz", "5b6f17381dffb7cf12ecdd854ea58e5f1dd347e796c29927b2225c61ad8ac74a"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-musl-gcc4.tar.gz", "be61e4a1b80940aeab461fbb19ce97fab9b8e4c4cbe4c47b478f47cc4c404f9e"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-musl-gcc7.tar.gz", "88096ef6772723c7b5757e3b38305c8b0ebe567b6d5fe90dc4479b9477867383"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-linux-musl-gcc8.tar.gz", "51d5fc4d504d5f31a16f8c6f91b4203bef28806b281691e9044a333b5ca7315d"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-unknown-freebsd11.1-gcc4.tar.gz", "c84832d525cf7eea86a1bef447feff984c948e0c849b32d66b03a2e95c4ced4a"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-unknown-freebsd11.1-gcc7.tar.gz", "621c6bcf53d3cec920cd8d14c0d81055d8605b72a8b449468c97de0fb42c784c"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-unknown-freebsd11.1-gcc8.tar.gz", "ea089e4671a374947070c2e6e5e6d0ab7e92f124775cf35b3b7bd354b021e560"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-w64-mingw32-gcc4.tar.gz", "369dcebfa1ca54d5eb1997edf49651e7bb0dab59c4a4516ab1c600f46d536350"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-w64-mingw32-gcc7.tar.gz", "e41bc94c83f03555de08073107369d63492dea1d0a3f775c1a151d8ec98449cc"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.1.1.x86_64-w64-mingw32-gcc8.tar.gz", "9846cae7dc3f3b47b65a1605e7c61b8f1644cd3b128577719ea6d826b2f23030"),
)

this_platform = platform_key_abi()

custom_library = false
if haskey(ENV,"JULIA_SCS_LIBRARY_PATH")
    custom_products = [LibraryProduct(ENV["JULIA_SCS_LIBRARY_PATH"],product.libnames,product.variable_name) for product in products]
    if all(satisfied(p; verbose=verbose) for p in custom_products)
        products = custom_products
        custom_library = true
    else
        error("Could not install custom libraries from $(ENV["JULIA_SCS_LIBRARY_PATH"]).\nTo fall back to BinaryProvider call delete!(ENV,\"JULIA_SCS_LIBRARY_PATH\") and run build again.")
    end
end

if !custom_library
    # Install unsatisfied or updated dependencies:
    unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
    dl_info = choose_download(download_info, this_platform)
    if dl_info === nothing && unsatisfied
        # If we don't have a compatible .tar.gz to download, complain.
        # Alternatively, you could attempt to install from a separate provider,
        # build from source or something even more ambitious here.
        error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
    end
    
    # If we have a download, and we are unsatisfied (or the version we're
    # trying to install is not itself installed) then load it up!
    if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
        # Download and install binaries
        install(dl_info...; prefix=prefix, force=true, verbose=verbose)
    end

end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
